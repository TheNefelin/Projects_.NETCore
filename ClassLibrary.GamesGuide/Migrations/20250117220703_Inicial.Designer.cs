// <auto-generated />
using ClassLibrary.GamesGuide.Connection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassLibrary.GamesGuide.Migrations
{
    [DbContext(typeof(GamesGuideDbContext))]
    [Migration("20250117220703_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassLibrary.GamesGuide.Entities.BackgroundEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Id_Game")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Game");

                    b.ToTable("GG_Backgrounds");
                });

            modelBuilder.Entity("ClassLibrary.GamesGuide.Entities.CharacterEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<int>("Id_Game")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Game");

                    b.ToTable("GG_Characters");
                });

            modelBuilder.Entity("ClassLibrary.GamesGuide.Entities.GameEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<bool>("IdActive")
                        .HasColumnType("bit");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.ToTable("GG_Games");
                });

            modelBuilder.Entity("ClassLibrary.GamesGuide.Entities.GuideEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Id_Game")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Game");

                    b.ToTable("GG_Guides");
                });

            modelBuilder.Entity("ClassLibrary.GamesGuide.Entities.SourceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Id_Game")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("VARCHAR(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Game");

                    b.ToTable("GG_Sources");
                });

            modelBuilder.Entity("ClassLibrary.GamesGuide.Entities.BackgroundEntity", b =>
                {
                    b.HasOne("ClassLibrary.GamesGuide.Entities.GameEntity", "Game")
                        .WithMany("Backgrounds")
                        .HasForeignKey("Id_Game")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("ClassLibrary.GamesGuide.Entities.CharacterEntity", b =>
                {
                    b.HasOne("ClassLibrary.GamesGuide.Entities.GameEntity", "Game")
                        .WithMany("Characters")
                        .HasForeignKey("Id_Game")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("ClassLibrary.GamesGuide.Entities.GuideEntity", b =>
                {
                    b.HasOne("ClassLibrary.GamesGuide.Entities.GameEntity", "Game")
                        .WithMany("Guides")
                        .HasForeignKey("Id_Game")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("ClassLibrary.GamesGuide.Entities.SourceEntity", b =>
                {
                    b.HasOne("ClassLibrary.GamesGuide.Entities.GameEntity", "Game")
                        .WithMany("Source")
                        .HasForeignKey("Id_Game")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("ClassLibrary.GamesGuide.Entities.GameEntity", b =>
                {
                    b.Navigation("Backgrounds");

                    b.Navigation("Characters");

                    b.Navigation("Guides");

                    b.Navigation("Source");
                });
#pragma warning restore 612, 618
        }
    }
}
